// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dailycard.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CDCardInfoItem;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CDCardInfoType

typedef GPB_ENUM(CDCardInfoType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  CDCardInfoType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CDCardInfoType_CardInfoText = 0,
  CDCardInfoType_CardInfoImage = 1,
  CDCardInfoType_CardInfoLocation = 2,
  CDCardInfoType_CardInfoWhether = 3,
};

GPBEnumDescriptor *CDCardInfoType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL CDCardInfoType_IsValidValue(int32_t value);

#pragma mark - DailycardRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface DailycardRoot : GPBRootObject
@end

#pragma mark - CDCardImage

typedef GPB_ENUM(CDCardImage_FieldNumber) {
  CDCardImage_FieldNumber_FilePath = 1,
  CDCardImage_FieldNumber_URL = 2,
  CDCardImage_FieldNumber_Width = 3,
  CDCardImage_FieldNumber_Height = 4,
};

@interface CDCardImage : GPBMessage

///本地文件路径
@property(nonatomic, readwrite, copy, null_resettable) NSString *filePath;

///远端路径
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

///宽度
@property(nonatomic, readwrite) int32_t width;

///高度
@property(nonatomic, readwrite) int32_t height;

@end

#pragma mark - CDCardText

typedef GPB_ENUM(CDCardText_FieldNumber) {
  CDCardText_FieldNumber_Text = 1,
};

@interface CDCardText : GPBMessage

///内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@end

#pragma mark - CDCardInfoItem

typedef GPB_ENUM(CDCardInfoItem_FieldNumber) {
  CDCardInfoItem_FieldNumber_Type = 1,
  CDCardInfoItem_FieldNumber_Content = 2,
};

@interface CDCardInfoItem : GPBMessage

@property(nonatomic, readwrite) CDCardInfoType type;

@property(nonatomic, readwrite, copy, null_resettable) NSData *content;

@end

/// Fetches the raw value of a @c CDCardInfoItem's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t CDCardInfoItem_Type_RawValue(CDCardInfoItem *message);
/// Sets the raw value of an @c CDCardInfoItem's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetCDCardInfoItem_Type_RawValue(CDCardInfoItem *message, int32_t value);

#pragma mark - CDCardInfo

typedef GPB_ENUM(CDCardInfo_FieldNumber) {
  CDCardInfo_FieldNumber_ContentsArray = 1,
};

@interface CDCardInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CDCardInfoItem*> *contentsArray;
/// The number of items in @c contentsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger contentsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
